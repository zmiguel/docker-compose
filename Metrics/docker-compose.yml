version: "3.8"

networks:
  LabNetwork:
    external: true
  adminer:
      external: true

services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    networks:
      - default
      - LabNetwork
    ports:
      - 8087:8086
    expose:
      - 8086
    volumes:
      - ./influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_ADMIN_USER=user
      - INFLUXDB_ADMIN_PASSWORD=password

  influxdb2:
    image: influxdb:2.0
    container_name: influxdb2
    restart: always
    networks:
      - default
      - LabNetwork
    ports:
      - '8086:8086'
    expose: 
      - 8086
    volumes:
      - ./influxdb2/data:/var/lib/influxdb2
      - ./influxdb2/config.yml:/etc/influxdb2/config.yml
    environment:
      - INFLUXDB_ADMIN_USER=user
      - INFLUXDB_ADMIN_PASSWORD=password
    labels:
      traefik.enable: true
      traefik.http.routers.influx.entrypoints: https
      traefik.http.routers.influx.rule: Host(`influx.domain.tld`)
      traefik.http.routers.influx.tls: true
      traefik.http.routers.influx.middlewares: security@file
      traefik.http.services.influx.loadbalancer.server.port: 8086

  chronograf:
    image: chronograf:latest
    container_name: chronogarf
    restart: unless-stopped
    expose:
      - 8888
    networks:
      - default
      - LabNetwork
    volumes:
      - ./chronograf:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=user
      - INFLUXDB_PASSWORD=password
    labels:
      traefik.enable: true
      traefik.http.routers.chronograf.entrypoints: https
      traefik.http.routers.chronograf.rule: Host(`chronograf.domain.tld`)
      traefik.http.routers.chronograf.tls: true
      traefik.http.routers.chronograf.middlewares: security-auth@file
      traefik.http.services.chronograf.loadbalancer.server.port: 8888

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    expose: 
      - 3000
    ports:
      - 3333:3000
    networks:
      - default
      - LabNetwork
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.entrypoints: https
      traefik.http.routers.grafana.rule: Host(`monit.domain.tld`)
      traefik.http.routers.grafana.tls: true
      traefik.http.routers.grafana.middlewares: security@file
      traefik.http.services.grafana.loadbalancer.server.port: 3000

  shynet:
    container_name: shynet_main
    image: milesmcc/shynet:latest
    restart: unless-stopped
    expose:
      - 8080
    env_file:
      - .env
    environment:
      - DB_HOST=shynet_db
    networks:
      - default
      - LabNetwork
    depends_on:
      - shynet_db
    labels:
      traefik.enable: true
      traefik.http.routers.shynet.entrypoints: https
      traefik.http.routers.shynet.rule: Host(`shy.domain.tld`)
      traefik.http.routers.shynet.tls: true
      traefik.http.routers.shynet.middlewares: security@file
      traefik.http.services.shynet.loadbalancer.server.port: 8080

  shynet_db:
    container_name: shynet_database
    image: postgres
    restart: always
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "POSTGRES_DB=${DB_NAME}"
    volumes:
      - ./shynet_db:/var/lib/postgresql/data
    networks:
      - default
      - adminer

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/etc/prometheus'
    expose:
      - 9090
    networks:
      - default
      - LabNetwork
    restart: always

  speedtest:
    restart: unless-stopped
    network_mode: host
    container_name: speedtest
    build: ./speedtest
#    image: turbothinh/network-speedtest:latest
    environment:
      - CRON_CONFIG='*/5 * * * *'
      - SPEEDTEST_HOST=Home
      - SPEEDTEST_SERVER_ID=30945
      - INFLUXDB_DB=network_speed
      - INFLUXDB_ADMIN_USER=user
      - INFLUXDB_ADMIN_PASSWORD=password
      - INFLUXDB_HOST=localhost
      - INFLUXDB_PORT=8087

  scrutiny:
    image: analogj/scrutiny:latest
    container_name: scrutiny
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - default
      - LabNetwork
    volumes:
      - /run/udev:/run/udev:ro
      - ./scrutiny:/scrutiny/config
    devices:
      - /dev/sda
      - /dev/sdb
      - /dev/sdc
      - /dev/sdd
      - /dev/sde
      - /dev/sdf
      - /dev/sdg
      - /dev/sdh
      - /dev/nvme0
    cap_add: 
      - SYS_RAWIO
      - SYS_ADMIN
    labels:
      traefik.enable: true
      traefik.http.routers.scrutiny.entrypoints: https
      traefik.http.routers.scrutiny.rule: Host(`smart.domain.tld`)
      traefik.http.routers.scrutiny.tls: true
      traefik.http.routers.scrutiny.middlewares: security-auth@file
      traefik.http.services.scrutiny.loadbalancer.server.port: 8080

