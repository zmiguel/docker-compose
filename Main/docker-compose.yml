version: "3.8"

networks:
    LabNetwork:
        external: true
    adminer:
        external: true

services:
  #Traefik proxy
    traefik:
        container_name: traefik
        image: traefik:v2.4
        restart: always
        security_opt:
            - no-new-privileges:true
        environment:
            - "CF_API_EMAIL=cloudflare_email"
            - "CF_API_KEY=cloudflare_api"
            - "CF_DNS_API_TOKEN=cloudflare_api"
            - "CF_ZONE_API_TOKEN=cloudflare_api"
        networks:
            - LabNetwork
            - default
        ports:
            - 80:80
            - 443:443
            - 7890:7890
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - ./traefik/traefik.yml:/traefik.yml:ro
            - ./traefik/acme.json:/acme.json
            - ./traefik/dynamic:/dynamic:ro
            - ./traefik/traefik.log:/etc/traefik/applog.log
            - ./traefik/logs:/var/logs/traefik
        labels:
            traefik.enable: true
            traefik.http.routers.traefik-secure.entrypoints: https
            traefik.http.routers.traefik-secure.rule: Host(`traefik.domain.tld`)
            traefik.http.routers.traefik-secure.middlewares: security-auth@file
            traefik.http.routers.traefik-secure.tls: true
            traefik.http.routers.traefik-secure.tls.certresolver: letsencrypt
            traefik.http.routers.traefik-secure.tls.domains[0].main: domain.tld
            traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.domain.tld,otherdomain.tld,*.otherdomain.tld,domain3.tld,*.domain3.tld,*.mail.domain.tld,*.chat.domain.tld,*.lab.domain.tld,domain4.tld,*.domain4.tld"
            traefik.http.routers.traefik-secure.service: api@internal

    portainer:
        image: portainer/portainer-ce
        container_name: "portainer"
        restart: always
        expose:
            - 9000
            - 8000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./portainer/data:/data
        networks:
            - default
            - LabNetwork
        labels:
            traefik.enable: true
            traefik.http.routers.portainer.entrypoints: https
            traefik.http.routers.portainer.rule: Host(`portainer.domain.tld`)
            traefik.http.routers.portainer.tls: true
            traefik.http.routers.portainer.middlewares: security-auth@file
            traefik.http.services.portainer.loadbalancer.server.port: 9000
    
    pihole:
        container_name: pihole
        image: pihole/pihole:latest
        networks:
        - LabNetwork
        ports:
        - "53:53/tcp"
        - "53:53/udp"
        - "67:67/udp"
        expose:
        - 80
        - 443
        environment:
        - TZ='Europe/Lisbon'
        volumes:
        - './pihole/etc-pihole/:/etc/pihole/'
        - './pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
        dns:
        - 1.1.1.1
        restart: unless-stopped
        labels:
            traefik.enable: true
            traefik.http.routers.pihole.entrypoints: https
            traefik.http.routers.pihole.rule: Host(`pi-hole.domain.tld`)
            traefik.http.routers.pihole.tls: true
            traefik.http.routers.pihole.middlewares: security-auth@file
            traefik.http.services.pihole.loadbalancer.server.port: 80

    duplicati:
        image: ghcr.io/linuxserver/duplicati
        container_name: duplicati
        environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/Lisbon
        volumes:
        - ./duplicati:/config
        - /mnt/usb:/backups
        - /nvme:/source
        expose:
        - 8200
        networks:
        - LabNetwork
        restart: unless-stopped
        labels:
            traefik.enable: true
            traefik.http.routers.duplicati.entrypoints: https
            traefik.http.routers.duplicati.rule: Host(`backups.domain.tld`)
            traefik.http.routers.duplicati.tls: true
            traefik.http.routers.duplicati.middlewares: security-auth@file
            traefik.http.services.duplicati.loadbalancer.server.port: 8200

    samba:
        image: dperson/samba
        container_name: samba
        restart: always
        labels:
        - traefik.enable=false
        ports:
        - "137:137"
        - "138:138"
        - "139:139"
        - "445:445"
        environment:
        - TZ=Europe/Lisbon
        volumes:
        - /z-data/torrent:/mount/downloads
        - /z-data/Storage:/mount/data
        - /mnt/usb:/mount/usb
        command: '-s "data;/mount/data;yes;no;no;user;user;;" -s "downloads;/mount/downloads;yes;no;no;user;user;;" -s "usb;/mount/usb;yes;no;no;user;user;;" -u "user;password" -r'

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        restart: always
        command: --cleanup --interval 21600 --rolling-restart
        labels:
        - traefik.enable=false
        volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./watchtower/config/:/config

    adminer:
        image: adminer
        container_name: adminer
        restart: always
        networks:
        - adminer
        - default
        - LabNetwork
        environment:
        - ADMINER_DESIGN='galkaev'
        expose:
        - 8080
        labels:
            traefik.enable: true
            traefik.http.routers.adminer.entrypoints: https
            traefik.http.routers.adminer.rule: Host(`adminer.domain.tld`)
            traefik.http.routers.adminer.tls: true
            traefik.http.routers.adminer.middlewares: security-auth@file
            traefik.http.services.adminer.loadbalancer.server.port: 8080

    wireguard:
        container_name: wireguard
        image: place1/wg-access-server
        cap_add:
        - NET_ADMIN
        environment:
            WG_WIREGUARD_PRIVATE_KEY: OICa8O+5Ix//bjXYd/od6D0R7lIlY1fDRm2QY0AgFGI=
            WG_STORAGE: sqlite3:///wireguard-clients/db.sqlite3
            WG_EXTERNAL_HOST: wg.domain.tld
            WG_CONFIG: "/config.yaml"
            WG_ADMIN_USERNAME: user
            WG_ADMIN_PASSWORD: password
        volumes:
        - ./wg-as/wg-access-server:/data"
        - ./wg-as/wireguard-clients:/wireguard-clients
        - ./wg-as/wireguard/config.yaml:/config.yaml:ro # if you have a custom config file
        ports:
        - "51820:51820/udp"
        expose:
        - 8000
        devices:
        - "/dev/net/tun:/dev/net/tun"
        restart: always
        labels:
            traefik.enable: true
            traefik.http.routers.wg.entrypoints: https
            traefik.http.routers.wg.rule: Host(`wg.domain.tld`)
            traefik.http.routers.wg.tls: true
            traefik.http.routers.wg.middlewares: security-auth@file
            traefik.http.services.wg.loadbalancer.server.port: 8000